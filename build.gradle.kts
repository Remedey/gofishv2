/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    // id("java")
    id("org.openjfx.javafxplugin") version "0.0.13"
    id("org.beryx.jlink") version "2.26.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { setUrl("https://jitpack.io") }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.1")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:31.1-jre")
    implementation("com.esotericsoftware:kryo:5.4.0")
    implementation("com.github.crykn:kryonet:2.22.8")
}

application {
    // Define the main class for the application.
    mainModule.set("io.github.p0lbang.gofish")
//    mainClass.set("io.github.p0lbang.gofish.exp2App")
    mainClass.set("io.github.p0lbang.gofish.MainApp")
}

javafx {
    version = "11"
    modules("javafx.controls", "javafx.fxml")
}

jlink {
    addOptions("--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages")
    launcher {
        name = "GoFish"
    }
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
